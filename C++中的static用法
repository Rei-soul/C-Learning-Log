#include<iostream>
struct entinity {
	static int x;
	static int y;
	int a;
	int b;
	void coutxy() {
		std::cout << x << " " << y << std::endl;
		std::cout << a << " " << b << std::endl;
	}
    //非静态函数好像两个都可以访问？
	static void staticcout() {
		//std::cout << a << " " << b << std::endl;
	}
    //静态函数也只能访问静态变量
};      

//静态方法没有类实例
int entinity::x;
int entinity::y;
//类里的静态变量需要在类外面定义
int main() {
	entinity e;
	e.x = 2;
	e.y = 5;
	e.coutxy();
	
	entinity::x = 18;//可以这样用，因为静态变量是共享的
	
	 entinity e1;
	e1.x = 0;
	e1.y = 0;
	e1.coutxy();

	//不同类实例里面的静态变量是同一个！！
	//只有类里的函数，才可以访问类里的private变量
}
